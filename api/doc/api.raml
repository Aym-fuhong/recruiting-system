#%RAML 1.0
title: TWARecurting API
description:
version: V1
baseUri: http://api.bronzesword.com/
schemas:
  - halLink: |
      { "$schema": "http://json-schema.org/schema",
        "type": "object",
        "description": "a Hypertext Application Language link",
        "properties": {
          "name":  { "type": "string" },
          "href":  { "type": "string" },
          "tempted": {"type": "string"} }
        },
        "required": [ "href" ]
      }
/register:
  post:
    body:
      application/x-www-form-urlencoded:
        properties:
          mobilePhone: string
          email: string
          password: string
    responses:
      200:
        body:
          application/json:
            properties:
              user: halLink
              userInfo: halLink
              
/users:
  get:
    queryParameters:
      field: string
      value: string
    responses:
      200:
        body:
          application/json:
            properties:
              uri: halLink
  /{id}:
    get:
      responses:
        200:
          body:
            application/json:
              properties:
                id: integer
                email: string
                mobilePhone: string
                name: string

/scoresheets:
  get:
    description: 得到所有的成绩单
    response:
      200:
        body:
          application/json:
            type: object[]
            properties:
              uri: string

  post:
    description: 考试完毕，提交成绩单
    body:
      multipart/form-data:
        formParameters:
          examerId: integer
          paperId: integer
          blankQuizSubmits: object[]
            blankQuizId: integer
            itemPosts: object[]
              answer: string
              quizItemId: integer
          homeworkSubmits: object[]
            homeworkQuizId: integer
            homeworkSubmitPostHistory: object[]
              homeworkURL: string
              version: string
                
    response:
      201:
        body:
          application/json:
            type: object
            properties:
              uri: string
              
  /{scoresheetId}: 
    get:
      description: 获取成绩单的细节
      response:
        200:
          body:
            application/json:
              examer: 
                uri: string
              paper:
                uri: string
              blankQuizSubmits: object[]
                blankQuiz: 
                  uri: string
                itemPosts: object[]
                  answer: string
                  quizItem: 
                    uri: string
              homeworkSubmits: object[]
                homeworkQuiz: 
                  uri: string
                homeworkSubmitPostHistory: object[]
                  homeworkURL: string
                  branch: string
                  version: string

/papers:
  get:
    description: 获得所有的考卷定义
    response:
      200:
        body:
          application/json:
           type: object[]
             uri: string
       
  post:
    description: 提交一份考卷定义，含section定义
    body:
      multipart/form-data:
        formParameters:
          sections: object[]
            desc: string
              description: Markdown String to discribe what happen in the future
            quizzes: object[]
              id: integer
              quizType: string
    response:
      201:
        body:
          application/json:
            uri: string
  /{paperId}:
    get:
      description: 获取一份考卷定义的细节，含section的细节
      response:
        200:
          body:
            description: quizzes的顺序是有含义的，所以不能乱序
            application/json:
              sections: object[]
                id: integer
                desc: string
                  description: Markdown String to discribe what happen in the future
                quizzes: object[]
                  uri: string
              maker:
                uri: string
  /enrollment:
    get:
      description: 获取一份考卷定义的细节，含section的细节
      response:
        200:
          body:
            description: quizzes的顺序是有含义的，所以不能乱序
            application/json:
              sections: object[]
                id: integer
                desc: string
                  description: Markdown String to discribe what happen in the future
                quizzes: object[]
                  uri: string
              maker:
                uri: string


/blankQuizzes:
  get:
    description: 获得所有的填空题定义
    response:
      200:
        body:
          application/json:
            blankQuizzes:object[]
              id:integer
              sectionId:integer
              type:string
              count:integer
              hardCount:integer
              normalCount: integer
              easyCount: integer
  post:
    description: 提交一份填空题定义
    body:
      multipart/form-data:
        formParameters:
          id:integer
          sectionId:integer
          type:string
          count:integer
          hardCount:integer
          normalCount: integer
          easyCount: integer
    response:
      200:
        body:
          application/json:
            uri: string

  /{blankQuizId}:
    get:
      description: 获取一份填空题的定义
      response:
        200:
          id: integer
          type: string
            description: class name of generator
          count: integer
          hardCount: integer
          normalCount: integer
          easyCount: integer
  /{blankQuizId}/items
    get:
      description: 获取一组题目的内容
      response:
        200:
          type: object[]
            quizItem:
              id: integer
              initializedBox: string
              question: string
              questionZh: string
              description: string
              descripyionZh: string
              chartPath: string
              # 根据前台需要的数据把剩下的补完，不能有正确答案
/quizItems:
  get:
    description: 获取所有的题目项定义
    response:
      200:
        body:
          application/json:
            quizItems: object[]
              id:integer
              initializedBox: string
              question: string
              questionZh: string
              description: string
              descripyionZh: string
              chartPath: string
  post:
    description: 提交一份题目项定义
    body:
      multipart/form-data:
        formParameters:
          id: integer
          initialedBox: string
          question: string
          questionZh: string
          description: string
          descripyionZh: string
          chartPath: string
    response:
      200:
        body:
          appication/json:
            uri: string
  /{quizItemId}:
    get:
      description: 获得一份题目项定义的细节
      response:
        200:
          id: integer
          desc: string
            description: Markdown String to discribe homework requirement
          infoPath: string
            description: path to item info json file which contains: hardness, rightAnswer and so on

/homeworkQuizzes:
  get:
    description: 获得所有的homework题目定义
  post:
    description: 提交一份homework题目定义
  /{homeworkQuizId}:
    get:
      description: 获得一份homework题目定义的细节
      response:
        200:
          id: integer
          desc: string
            description: Markdown String to discribe homework requirement
          evaluateScript: string
          evaluateRepository: string
            description: git url, contain dockerFile in repository
          templateRepository: string
            description: git url, contain dockerFile in repository
            
/userInfo/{id}:
  get:
  put:
/logic-puzzle/{id}:
  description: A logic exam subject
  get:
/userSubjects:
  get:
    queryParameters:
      userId:
    responses:
      200:
        body:
          application/json:
            properties:
              subjects: halLink[]
